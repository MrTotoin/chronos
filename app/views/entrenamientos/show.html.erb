<% content_for :head do %>
	<% javascript_tag do %>
		$(function () {  
	      setTimeout(refresca_estado, 1000);  
	  		});  

		function refresca_estado() {  
	  		var entrenamiento_id = $('#test_id').attr('data-id')	
	  		$.getScript('/wait.js?entrenamiento_id=' + entrenamiento_id);  
	  		setTimeout(refresca_estado, 1000);  
			};
	<% end %>
<% end %>

	<h1> 
		<%= Nadador.find(@entrenamiento.nadador_id).apellido %> 
		<%= Nadador.find(@entrenamiento.nadador_id).nombre %>
	</h1>


		<b>	Tipo de prueba:</b> <%= @entrenamiento.tipo_prueba %> <br>
		<b>	Distancia:</b>			<%= @entrenamiento.distancia %> metros <br>


<% if @entrenamiento.show_or_wait == false %>
		<div id="test_id" data-id="<%= @entrenamiento.id %>" >
		<!-- 	esta div se carga con el partial _entrenamiento.js.erb que es llamado por el wait.js.erb 
				cuando se llama al metodo wait del entrenamientos controller. Se le pasan datos dentro de
				la etiqueta que abre el DIV -->
		</div>
<% else %>
		<div id="test_id" data-id="<%= @entrenamiento.id %>" >
		</div>
<% end %>

<br>
<br>

<b>Actualiza el tiempo (o cualquier otro dato dentro de la DIV cada 1 segundo. Hay que hacer la logica para mostrar distintas opciones o pensar como hacerlo para guardar el dato o borrarlo de la base de datos cuando se termina de nadar y ya estan los datos listos desde la unidad central. Falta ver como trabajar con archivos para mas adelante leer la memoria del microcontrolador como si fuese un archivo.  </b> <br>


